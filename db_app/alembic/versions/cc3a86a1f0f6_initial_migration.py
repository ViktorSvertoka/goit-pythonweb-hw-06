"""Initial migration

Revision ID: cc3a86a1f0f6
Revises: 
Create Date: 2024-12-11 17:56:09.433280

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cc3a86a1f0f6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('statuses')
    op.drop_table('users')
    op.drop_table('status')
    op.add_column('grades', sa.Column('date_received', sa.Date(), nullable=False))
    op.alter_column('grades', 'grade',
               existing_type=sa.NUMERIC(),
               type_=sa.Float(),
               nullable=False)
    op.drop_column('grades', 'date')
    op.drop_column('grades', 'value')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('grades', sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('grades', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('grades', 'grade',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(),
               nullable=True)
    op.drop_column('grades', 'date_received')
    op.create_table('status',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('status_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='status_pkey'),
    sa.UniqueConstraint('name', name='status_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('fullname', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('statuses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='statuses_pkey'),
    sa.UniqueConstraint('name', name='statuses_name_key')
    )
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], name='tasks_status_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    # ### end Alembic commands ###
